{"version":3,"sources":["file:///Users/lijian/Documents/Cocos-ScrollView/assets/scripts/scrollNew/ScrollHelper.ts"],"names":["_decorator","Component","ScrollView","v2","Node","UITransform","resources","SpriteFrame","Prefab","Size","instantiate","v3","Sprite","Label","ccclass","property","ScrollHelper","itemPrefab","startPos","cachePool","dataList","maxNum","itemHeight","initY","maxY","minY","needSize","visibleHeight","curOffset","miniIdx","showItemList","headList","onLoad","window","viewContent","position","x","y","scroll","node","getComponent","height","on","onScrolling","bind","Promise","resolve","reject","loadDir","err","asset","load","i","push","loadList","onEnable","start","destroyAllChildren","InitObjs","length","uITransform","setContentSize","width","curX","curY","obj","parent","active","onRefresh","countBorder","offest","refresh","idx","lastMinIdx","Math","floor","curEndY","deleteNodeUuIdList","remainList","forEach","item","index","uuid","len","indexOf","splice","refreshItem","objIdx","pop","console","error","sort","a","b","head","getChildByName","num","string","scrollOffset","getScrollOffset","update","dt"],"mappings":"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","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { _decorator, Component, ScrollView, v2, Node, UITransform, resources, SpriteFrame, Prefab, Size, instantiate, v3, Sprite, Label, Vec2 } from \"cc\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class ScrollHelper extends Component {\r\n\r\n    @property(Node)\r\n    viewContent: Node = null; // 列表挂点\r\n\r\n    @property(ScrollView)\r\n    scroll: ScrollView = null; // \r\n\r\n    itemPrefab = null; // 预制体\r\n    private startPos = null;// 滑动视图的起始位置\r\n    private cachePool = [];// 移除的等待使用的item池\r\n    private dataList = [];// 数据列表\r\n    private maxNum = 8;// 必须小于服务器返回的每页最大个数，这里每页是20个\r\n    private itemHeight = 105; // 高度+间隙\r\n    private initY = 0;\r\n    private maxY = 0;\r\n    private minY = 0;\r\n    private needSize = 0;//需求要求的高度/宽度\r\n    private visibleHeight = 0;//显示范围高度\r\n    private curOffset = 0;// 滑动偏移 距离左上角\r\n    private miniIdx = 0;// 开始的数据列表index\r\n    private showItemList = [];// 显示的item列表\r\n\r\n    private headList = [];// 头像图列表\r\n    async onLoad() {\r\n        window['test'] = this;\r\n        this.startPos = v2(this.viewContent.position.x, this.viewContent.position.y);\r\n\r\n        this.visibleHeight = this.scroll.node.getComponent(UITransform).height;\r\n        this.scroll.node.on(\"scrolling\", this.onScrolling.bind(this), this);\r\n        // 加载预制体和图片\r\n        await new Promise((resolve, reject) => {\r\n            resources.loadDir(\"imgs\", SpriteFrame, (err, asset) => {\r\n                if (!err) this.headList = asset;\r\n                resolve(asset);\r\n            })\r\n        })\r\n        await new Promise((resolve, reject) => {\r\n            resources.load(\"prefabs/item\", Prefab, (err, asset) => {\r\n                if (!err) this.itemPrefab = asset;\r\n                resolve(asset);\r\n            })\r\n        })\r\n        // 可以请求服务器得到\r\n        // 总共40个数据\r\n        for (let i = 0; i < 40; i++) {\r\n            this.dataList.push(i + 1);\r\n        }\r\n        this.loadList();\r\n    }\r\n    // 每次显示 都初始化一下，用于重新加载数据,滑动重置\r\n    onEnable() {\r\n        this.cachePool = [];\r\n        this.dataList = [];\r\n        this.viewContent.getComponent(UITransform).height = 0;\r\n        this.initY = -this.itemHeight / 2;\r\n        this.curOffset = 0;\r\n        this.miniIdx = 0;\r\n        this.showItemList = []\r\n\r\n        if (this.startPos) this.viewContent.position = this.startPos; // 重置初始位置\r\n    }\r\n    start() {\r\n    }\r\n\r\n    // 加载列表\r\n    loadList() {\r\n        this.viewContent.destroyAllChildren();// 只要是第一页就重新加载；\r\n        this.InitObjs();\r\n        // 设置内容高度\r\n        this.needSize = this.dataList.length * this.itemHeight;\r\n        let uITransform = this.viewContent.getComponent(UITransform);\r\n        uITransform.setContentSize(new Size(uITransform.width, this.needSize));\r\n    }\r\n    // 初始化几个\r\n    InitObjs() {\r\n        let curX = 0;\r\n        let curY = 0;\r\n        for (let i = 0; i < this.maxNum; i++) {\r\n            if (!this.dataList[i]) break;\r\n            let obj = instantiate(this.itemPrefab);\r\n            obj.parent = this.viewContent;\r\n            obj.active = true;\r\n            curY = this.initY - this.itemHeight * i;\r\n            obj.position = v3(curX,curY);\r\n            this.onRefresh(obj,i+\"\", i);\r\n            this.showItemList.push(obj);\r\n        }\r\n    }\r\n    //计算边界，超过边界则刷新列表\r\n    //offest是左上角原点滑动的偏移量\r\n    private countBorder(offest) {\r\n        let height = this.visibleHeight;//可见高度\r\n        this.minY = offest;//获得相对于左上角原点的最小y值\r\n        this.maxY = offest + height;//获得相对于左上角原点的最大y值\r\n    }\r\n    //强行刷新\r\n    public refresh() {\r\n        let offest = this.curOffset;\r\n\r\n        //最大高度，超过该高度，不刷新\r\n        let maxY = this.needSize;\r\n        if (offest < 0 || offest + this.visibleHeight >= maxY)\r\n            return;\r\n\r\n        let idx: number = 0;//从0开始\r\n        this.countBorder(offest);\r\n        let lastMinIdx = this.miniIdx;\r\n        let miniIdx = Math.floor(offest / this.itemHeight);\r\n        // 当每次更新miniIdx 不同的时候，就是移除和新建的时候\r\n        if (this.miniIdx != miniIdx) {\r\n            let curY = this.initY - this.itemHeight * miniIdx;// 当前要开始的y,大于y的删除\r\n            let curEndY = this.initY - this.itemHeight * (miniIdx + this.maxNum);// 当前要结束的y,小于y的删除\r\n            let deleteNodeUuIdList = [];// 需要移除的uuid \r\n            let remainList = [];// 剩余的data index\r\n            this.showItemList.forEach((item, index) => {\r\n                if (item.position.y > curY || item.position.y <= curEndY) {// 大于当前展示的坐标或者小于当前展示的最小坐标，就可以移除\r\n                    deleteNodeUuIdList.push(item.uuid);\r\n                }\r\n                else {\r\n                    remainList.push(lastMinIdx + index); // 这里的顺序 iten列表对应上次实例化的data的index\r\n                }\r\n            })\r\n            let len = this.showItemList.length;\r\n            for (let index = len - 1; index >= 0; index--)// 逆序移除 防止移除多个问题\r\n            {\r\n                let item = this.showItemList[index];\r\n                if (deleteNodeUuIdList.indexOf(item.uuid) >= 0)// 在删除列表里，就删除，加到缓存列表中\r\n                {\r\n                    this.cachePool.push(item);\r\n                    this.showItemList.splice(index, 1);\r\n                }\r\n            }\r\n            this.miniIdx = miniIdx; // 更新\r\n            for (let i = 0; i < this.maxNum; i++) {\r\n                idx = this.miniIdx + i;\r\n                if (remainList.indexOf(idx) < 0)// 没有包含的 新实例化的数据，在剩余item中没有的就创建\r\n                {\r\n                    this.refreshItem(idx, i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //idx是UI该刷新的第几个元素\r\n    private refreshItem(idx, objIdx) {\r\n        if (idx < 0 || idx >= this.dataList.length)\r\n            return;\r\n        let obj = this.cachePool.pop();\r\n        if (obj == null) {\r\n            console.error(\"obj is null！\");\r\n            return;\r\n        }\r\n\r\n        let curX = 0;\r\n        let curY = 0;\r\n        curY = this.initY - this.itemHeight * idx;\r\n\r\n        // console.error(\"idx:\" + idx + \",curX:\" + curX + \",curY:\" + curY);\r\n        obj.position = v3(curX, curY);\r\n        obj.active = true;\r\n        this.onRefresh(obj, objIdx, idx);\r\n\r\n        this.showItemList.push(obj);\r\n        // 这里坐标按照显示从上到下  从大到小的排序 ，因为this.showItemList的都是后面push ,实例化下面数据，可以push，但是实例化上面数据，需要加到最前面，按照位置，\r\n        // 否则删除的时候根据index  remainList是根据index+lastMinIdx保留的，也就是数据列表的index,实例化上面数据index push到最后，到时候remian中index和实际的数据index不对应\r\n        this.showItemList.sort((a, b) => {\r\n            return -a.position.y + b.position.y;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 刷新回调\r\n     * @param obj \r\n     * @param idx 需求显示的索引\r\n     * @param objIdx 实际的item索引\r\n     */\r\n    private onRefresh(obj, idx: string, objIdx) {\r\n        let head = obj.getChildByName(\"head\").getComponent(Sprite);\r\n        let num = obj.getChildByName(\"index\").getComponent(Label);\r\n        // head.spriteFrame = this.headList[objIdx];\r\n        num.string = this.dataList[objIdx];\r\n    }\r\n\r\n    // 滑动中\r\n    onScrolling() {\r\n        //获取滚动视图相对于左上角原点的当前滚动偏移\r\n        let scrollOffset: Vec2 = this.scroll.getScrollOffset();\r\n        this.curOffset = scrollOffset.y;\r\n        this.refresh();\r\n    }\r\n    update(dt) {\r\n    }\r\n}\r\n"]}